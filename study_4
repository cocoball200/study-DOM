# HTML

![스크린샷 2022-03-20 오후 1.06.36.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/77cafae8-7524-4217-8c0d-fde5e7b498b6/스크린샷_2022-03-20_오후_1.06.36.png)

[https://html.spec.whatwg.org/multipage/](https://html.spec.whatwg.org/multipage/)

- html, dom과 같은 stadard를 정의함. appple, google 등이 참여
- 마크업 중심에서 애플리케이션 중심으로 옮겨와서 자바스크립트가 필수적이 되었습니다.
- Html는 콘텐츠를 표현하는 하나의 매체

HTML 구조 

- div는 완전히 특별한 의미를 가지고 있지 않다.
- div에 의미를 부여하여 만든 구조는 HTMl 표준을 지키지 않은 것
- div에는 콘텐츠가 없는 것 / 콘텐츠를 넣게 된다면 시맨틱이 있는 다른 태그들로 작성
- HTML은 표현이 아니라 콘텐츠를 제공하기 위한 것
- 계층적 구조로 만들지 않을 것
- 표현은 CSS 역할

![스크린샷 2022-03-20 오후 1.32.37.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bc09f249-fe57-4214-b2ef-0e4b99485ee6/스크린샷_2022-03-20_오후_1.32.37.png)

아웃라인

- 사전적 의미 : 윤곽, 개요
- 콘텐츠를 의미적으로 구분하기 위한
- 구조를 정형화, 명시화

Section

[: The Generic Section element - HTML: HyperText Markup Language | MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section)

- 대표적인 Section Elements
    - <nav>
        - defines a section that contains navigation links that appear often on a site
        - you can have primary and secondary menus, but you cannot nest a <nav> element inside another <nav> element
    - <article>
        - defines a piece of self-contained contend. It does not refer to the main content alone and can be used for comments and widgets.
    - <section>
        - defines a section of document to indicate a related grouping of semantic meaning. It makes sense to use the section element to provide extra context for the parent element.
    - <aside>
        - defines a section that, through related to the main element, doesn’t belong to the main flow, like an explanation box or an advertisement. The aside element has its own outline, but doesn’t belong to the main one.
- section은 outline과 headline을 갖고 있다.
- section은 main 컨텐츠에 참여한다.
- section을 다단계로 깊게 작성하면 아웃라인의 취지에 어긋날 수 있음
- 아웃라인 용으로 사용하는 것이 아니다 (mdn) ⇒ h1,~h6으로 사용

- 인터페이스 단위로, Noe, Htmlelement, method, position, mixin ParentNode, NoneDocumentTypechildNode
- 인터페이스는 프로퍼티, 메소드로 이루어 져있다.
